version: 2.1

orbs:
  terraform: circleci/terraform@3.2.1

jobs:
  build_and_push_docker_image:
    docker:
      - image: cimg/node:16.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Login to Docker Hub
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Build and Push Docker Image
          command: |
            docker build -t $DOCKER_USERNAME/adventure-frontend:$CIRCLE_SHA1 .
            docker push $DOCKER_USERNAME/adventure-frontend:$CIRCLE_SHA1

  test:
    docker:
      - image: cimg/node:16.0
    parallelism: 2
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Run Jest Tests
          command: npm run test:coverage
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: test-results

  deploy-test:
    docker:
      - image: cimg/node:16.0
    steps:
      - checkout
      - terraform/install:
          terraform_version: 1.8.3
      - terraform/init:
          path: ./terraform
      - terraform/plan:
          path: ./terraform
          var: >
            ami_id="$TEST_AMI_ID",
            image_tag="$DOCKER_USERNAME/adventure-frontend:$CIRCLE_SHA1",
            role_arn="$AWS_ROLE_ARN",
            access_key="$AWS_ACCESS_KEY",
            secret_access_key="$AWS_SECRET_ACCESS_KEY",
            key_name="$KEY_NAME"
            ec2_instance_id="i-097dfb31b480b6f4f"
          workspace: test

  deploy-prod:
    docker:
      - image: cimg/node:16.0
    steps:
      - checkout
      - terraform/install
      - terraform/init:
          path: ./terraform
      - terraform/apply:
          path: ./terraform
          var: >
            ami_id="$PROD_AMI_ID",
            image_tag="$DOCKER_USERNAME/adventure-frontend:$CIRCLE_SHA1",
            role_arn="$AWS_ROLE_ARN",
            access_key="$AWS_ACCESS_KEY",
            secret_access_key="$AWS_SECRET_ACCESS_KEY",
            key_name="$KEY_NAME"
            ec2_instance_id="i-054729f9e8cad7999"
          workspace: prod

workflows:
  build_and_deploy:
    jobs:
      - deploy-test
      - deploy-prod:
          requires:
            - deploy-test
          filters:
            tags:
              only: /^release-.*/
            branches:
              ignore: /.*/
